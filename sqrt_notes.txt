The problem is in theorem_n

== Goal ==

given error (n) < 4/2^n, prove that error (n + 1) < 2/2^n.

now our goal can be expanded as:

error (n + 1) < 2/2^n
error (n) - ((b (n)/2^n) * (2 * approx (n) + b (n)/2^n)) < 2/2^n

== Solution ==

=== Direct Substitution === 

Now we cound maximize the lhs by substituting the upper bound given by our inductive hypothesis:

4/2^n - ((b n/2^n) * (2 * approx (n) + b (n)/2^n)) < 2/2^n
2/2^n < ((b n/2^n) * (2 * approx (n) + b (n)/2^n))

but in general this does not hold because 0 <= b (n) <= 1. Substituting b (n) = 0 gives:

2/2^n < 0.

=== Case Analysis on b (n) ====

we need to either set an upper bound for error (n) when we do not subtract or set a lower bound for the value subtracted when we do.

when b (n) = 0: error (n) < 1/2^n * (2 approx (n) + 1/2^n)

when b (n) = 1: 1/2^n * (2 approx (n) + 1/2^n) <= error (n).

==== b (n) = 0 ===

when b (n) = 0: error (n) < 1/2^n * (2 approx (n) + 1/2^n).

We can substitute this equation into our error (n + 1) equation to maximize error (n):

1/2^n * (2 * approx (n) + 1/2^n) - ((b n/2^n) * (2 * approx (n) + b (n)/2^n)) < 2/2^n
1/2^n * (2 * approx (n) + 1/2^n) < 2/2^n

Now the problem is that the approx (n) < 2 constraint is not sufficient to prove our goal.

1/2^n * (2 * approx (n) + 1/2^n) < 2/2^n
1/2^n * (4 + 1/2^n) < 2/2^n

but we can solve this inequality to get a constraint on approx (n):

approx (n) < 1 - 1/2^(n + 1)

the problem is that this constraint is not true, because 1 <= approx (n) < 2, and 1 - 1/2^(n + 1) < 1.

This produces a contradiction for the b (n) = 0 case, so we know that b (n) <> 0. Hence b (n) = 1.


This argument holds for all n. So we know that approx (n) must be of the form 1.11111.

The problem is that approx (n) = 1.11111.. < 2 this means that lim n -> inf, approx (n)^2 = 4. which is greater than the maximum value for 1<=a<2.  so there must exist an n for which approx (n)^2 is greater than a.

This proves that our goal is false.

proof sketch:

Our forall n, rem (n) < 4 goal implies that forall n, error (n) < 4/2^n. 

forall n, error (n) < 4/2^n implies that approx (n) = 1.1111.. = 2-1/2^n. or something like this.

but then for all a there exists an n where approx(n)^2 is greater than a.

this is a contradiction. Hence !forall n, rem (n) < 4.







If we can produce a contradiction for the b (n) = 1 case, we know that the goal is false.

==== b (n) = 1 ====

when b (n) = 1: 1/2^n * (2 approx (n) + 1/2^n) <= error (n).

to prove that the goal is false, we must try to show that

error (n) - ((1/2^n) * (2 * approx (n) + 1/2^n)) >= 2/2^n

when the lhs is minimized.

Our minimum bound for error (n) is 1/2^n * (2 approx (n) + 1/2^n) from the b (n) = 1 constraint.

This substitution results in 0 >= 2/2^n.

So we need a stronger lower bound for error (n).

we know that a - approx (n)^2 = error (n).

We know that 1 <= a < 2. we need to minimize a and maximize approx. 

This argument appears to be a dead end...

But we just showed that error (n) = 4/2^n is inconsistent with b (n) = 0. So our inductive hypothesis must change the upper bound for error (n) based on whether or not b (n) = 0.





Now using our inductive hypothesis we can maximize error (n) using, error (n) < 4/2^n:

1/2^n * (2 approx (n) + 1/2^n) <= 4/2^n

when approx (n) = 1, this equation holds.

when approx (n) = 2, this equation fails.

So our existing constraints on approx (n) are not sufficient to decide the matter.

we know that approx (n) >= 1. When we insert this into the error (n + 1) equation to see if we exceed our 2/2^n goal:

4/2^n - 1/2^n * (2 + 1/2^n) = 2/2^n - 1/4^n < 2/2^n

To prove that the goal is false, we need a minimum value for approx (n) greater than 1.

We know that a - error (n) = approx (n)^2.

1 <= a < 2
1/2^n * (2 approx (n) + 1/2^n) <= error (n) < 4/2^n

We need a minimum value of approx (n).

To do this we minimize a and maximize error (n) this gives the smallest possible value for approx (n)

1 - 4/2^n <= approx (n)^2

If we substitute this minimum value for approx (n) into the error (n + 1) equation, do we now exceed our goal?

1/2^n * (2 approx (n) + 1/2^n) - 











I have error n < 4/2^n, but I need to prove that

error n - ((b n / 2^n) * (2 * approx n + (b n / 2^n))) < 4/2^(S n)
(4/2^n) - ((b n / 2^n) * (2 * approx n + (b n / 2^n))) < 4/2^(S n)

The problem is that if b n = 0, then we have

4/2^n < 4/2^(S n)

which is false.

So we must show that if b n = 1 then the expression ((b n / 2^n) * (2 * approx n + (b n / 2^n))) is greater than or equal to:

4/2^n - 4/2^(S n) = 2/2^n

and when b = 0 then error n < 4/2^(n+1)

if b n = 1
  then 1/2^n * (2 approx (n) + 1/2^n) <= error (n)

If b n = 0 
  then error (n) < 1/2^n * (2 approx (n) + 1/2^n)

== b n = 0 ==

Since forall n, approx (n) < 2, we can max error n when b = 0 as:
  error (n) < 1/2^n * (4 + 1/2^n)
The problem is that this is greater than 4/2^(n+1)

So we maximize our equation for error (S n) by substituting this upper bound for error n into our error (n+1) equation:

(1/2^n * (2 approx (n) + 1/2^n)) - ((b n / 2^n) * (2 * approx n + (b n / 2^n))) = error (n + 1)
(1/2^n * (2 approx (n) + 1/2^n)) - 0 = error (n + 1)

and show that this equation is less than 4/2^(S n) = 2/2^n

This inequality holds when approx (n) <= 1-1/2^(n+1)

This inequality is obviously false because 1-1/2^(n+1) is equivalent to subtracting 1 from the next bit in 1.0000. this gives a value less than 1.

approx (n) >= 1.0000000.

we need more constraints. approx (n) >= 1.00000 only because 1 <= a

we know that error (n) < 4/2^n and that error (n) < 1/2^n * (2 * approx (n) + 1/2^n).

We can substitute both of these equations into the error (n+1) equation to derive upper bounds for approx (n).

substituting error (n) = 4/2^n we get:






now error (n) = a - approx (n)^2
but a < 2
so error (n) < 2 - approx (n)^2
which implies that approx (n)^2 < 2 - error (n)

we want to maximize approx (n) and show that it must be <= 1-1/2^(n+1)
if error (n) is less than 4/2^(n+1) we dont have an issue. so this is the smallest value that error (n) can be to maximize approx (n).
Hence 

approx(n)^2 < 2 - 2/2^n

does this imply that approx(n) < 1-1/2^(n+1)?
