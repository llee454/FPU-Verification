/*
*/

murali_q (n)
  := if n = 0
       then 0
       else murali_q (n - 1) + murali_c (n - 1) * 2^(1 - n);

murali_ri (n) := 2 * a - murali_q (n) * 2 * b;

murali_r (n)
  := if n = 0
       then 2 * a
       else murali_ri (n - 1) - murali_c (n - 1) * 2^(1 - n) * 2 * b;

murali_c (n)
  := if 2^(- n) * 2 * b <= murali_ri (n)
       then 1
       else 0;

murali_summary (n)
  := if murali_ri (n) = 0
       then 0
       else 1;

hauser_sig (n)
  := if n = 0
       then 0
       else hauser_sig (n - 1) + hauser_c (n - 1) * hauser_bit (n - 1);

hauser_rem (n)
  := if n = 0
       then a
       else 2 * hauser_rem (n - 1) - hauser_c (n - 1) * 2 * b;

hauser_c (n)
  := if 2 * b <= 2 * hauser_rem (n)
     then 1
     else 0;

hauser_bit (n)
  := 2^(hauser_cycle (n) - 2);

hauser_cycle (n)
  := if n = 0
       then s + 3
       else hauser_cycle (n - 1) - 1;

hauser_summary (n)
  := if n = 1 
       then if a = b
              then 0
              else 1
       else if hauser_c (n - 1) = 1
              then 2 * hauser_rem (n - 1) = 2 * b
              else hauser_summary (n - 1);
